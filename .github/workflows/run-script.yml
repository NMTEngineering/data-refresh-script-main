name: Scrape and Upload to Cloud

on:
  schedule:
    # Runs every Sunday at 09:58 UTC (adjust to your desired time)
    - cron: '58 9 * * 0'
  workflow_dispatch:  # Allow manual trigger

jobs:
  scrape_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies (including Google Drive API client)
        # Install scraping dependencies plus the new Google API packages
        run: pip install -r requirements.txt

      - name: Run Scraping Script
        run: python yellowpages_hammer_unions.py

      # ----------------------------------------------------------------------
      # Solution: Upload to Google Drive using a standard Python script
      # This avoids external GitHub Actions which may be blocked/unreachable.
      # ----------------------------------------------------------------------
      - name: Upload CSV to Google Drive via Python Script
        # Pass necessary configurations as environment variables to the Python script
        env:
          # Pass the JSON secret directly to the script
          GDRIVE_SERVICE_ACCOUNT_JSON: ${{ secrets.GDRIVE_SERVICE_ACCOUNT_CREDENTIALS }}
          
          # Pass the Folder ID
          GDRIVE_FOLDER_ID: 13D4zIg4-kHcAVDL_XS_Ry1uABYkrLYmJ
          
          # Path to the local file created by the scraping script
          LOCAL_FILE_PATH: yellowpages_hammer_unions.csv
          
          # The target filename to use in Google Drive (must match logic in upload_to_gdrive.py)
          # UPLOAD_FILE_NAME: hammer_unions_scrape_${{ github.event.release.tag_name || github.run_number }}.csv
          UPLOAD_FILE_NAME: hammer_unions_scrape_${{ github.run_id }}.csv
          
        run: python upload_to_gdrive.py
          
      # ----------------------------------------------------------------------
      # Optional: Keep GitHub Artifact for troubleshooting (as you had before)
      # ----------------------------------------------------------------------
      - name: Upload Artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: scrape-output-csv
          path: "*.csv"
